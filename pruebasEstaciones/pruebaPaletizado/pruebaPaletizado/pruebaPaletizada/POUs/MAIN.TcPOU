<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="MAIN" Id="{801920e0-6ca6-4611-bcca-80d44a3fd171}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	enclaveStart: BOOL;
	cintaEntradaMaterial: BOOL;
	cintaInclinadaMaterial: BOOL;
	cintaEntradaPalets: BOOL;
	cintaSalida: BOOL;
	turnPaletizador: BOOL;
	luzVerde: BOOL;
	luzAmarilla : bool;
	luzRoja: BOOL;
	emergencia : bool;
	turnMesaGiratoria: BOOL;
	load: BOOL;
	unload: BOOL;
	pusher: BOOL;
	turnFlipper: BOOL;
	moveClamper: BOOL;
	beltPositive: BOOL;
	beltNegative: BOOL;
	chainPositive: BOOL;
	chainNegative: BOOL;
	openPlate: BOOL;
	elevatorUp: BOOL;
	elevatorDown: BOOL;
	elevatorToLimit: BOOL;
	cintaPaletEntradaEstacion : BOOL;
	contadorVector: INT;
	MatrizElemLista: BOOL;
	PaletListo: bool;
	timerOpenPlate: TON;
	paletizadoListo : bool;
	girando: BOOL;
	flancoEntradaPalets: F_TRIG;
	flancoPusher : R_TRIG;
	flancoPlato: R_TRIG;
	flancoEntradaMaterial : F_TRIG;
	contadorMatriz : int;
	timerAbrirPusher: TOn;
	startTimerPusher: BOOL;
	esperaPusher: BOOL;
	esperaPusher2: BOOL;
	timerVector: ton;
	startTimerVector: BOOL;
	
	recogerPusher: BOOL;
	senalAnterior: INT;
	senalActual: INT;
	pusherLimitAnt: BOOL;
	flancoPusherManual: BOOL;
	clamp: BOOL;
	flancoPlateManual: BOOL;
	plateLimitAnt: BOOL;
	bajandoPalet: BOOL;
	flancoPostPaletizado: F_TRIG;
	flancoMoving : F_TRIG;
	flancoMoVING2 : f_trig;
	paletArriba: BOOL;
	luzStart: BOOL;
	luzStop: BOOL;
	luzReset: BOOL;
	mesaCargada: BOOL;
	girandoMesa: BOOL;
	timerBajadaPalet: TON;
	startTimerPalet: BOOL;
	timerSubidaPalet: TON;
	flancoBasePalet : R_trig;
	saliendo: BOOL;
	numProductosCompletos: INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*
	1 - Boton de start (enclave + cintas emisoras + turn de paletizador)
	
	2 - Boton de stop
	
	3 - Palets
		- detectar palet en mesa de rotacion
		- girar mesa de rotacion (con flanco de bajada de sensor de entrada)
		- arrancar mesa de rotacion y cinta de salida
		- retornar mesa a posicion inicial (flanco sensor salida)
		- colocar palet en base del paletizador
	
	4 - Objeto a paletizar
		- arrancar cinta inclinada con flanco de sensor 
		- activar pusher con 2 objetos (contador por sensor)
		- cuando se hizo push 2 veces (4 objetos sobre plato) -> elevar paletizaodr
		- paletizaodr elevado -> abrir plato con objetos
		- bajar palet cargado 
		- cerrar plato
		- activar cinta para sacar palet cargado de la estacion

*)
luzStart := FALSE;
luzStop := FALSE;
luzReset := FALSE;

IF GVLvars.botonStart AND NOT emergencia THEN
	enclaveStart := TRUE;
	//Arrancar cintas emisoras
	cintaEntradaMaterial := TRUE;
	cintaInclinadaMaterial := TRUE;
	cintaEntradaPalets := TRUE;
	cintaSalida := TRUE;
	turnPaletizador := TRUE;
	luzStart := TRUE;
	luzVerde := TRUE;
	luzAmarilla := FALSE;
	luzRoja := FALSE;
END_IF

IF NOT GVLvars.botonStop AND NOT emergencia THEN
	enclaveStart := FALSE;
	luzStop := TRUE;
	luzVerde := FALSE;
	luzAmarilla := TRUE;
	luzRoja := FALSE;
	cintaEntradaMaterial := FALSE;
	cintaInclinadaMaterial := FALSE;
	cintaEntradaPalets := FALSE;
	cintaPaletEntradaEstacion := FALSE;
	cintaSalida := FALSE;
	turnPaletizador := FALSE;
	turnMesaGiratoria := FALSE ;
	load := FALSE ;
	unload := FALSE;
END_IF

IF NOT GVLvars.seta THEN
	enclaveStart := FALSE;
	luzVerde := FALSE;
	luzAmarilla := FALSE;
	luzRoja := TRUE;
	emergencia := TRUE; 
	cintaEntradaMaterial := FALSE;
	cintaInclinadaMaterial := FALSE;
	cintaEntradaPalets := FALSE;
	cintaPaletEntradaEstacion := FALSE;
	cintaSalida := FALSE;
	turnPaletizador := FALSE;
	//turnMesaGiratoria := FALSE ;
	load := FALSE ;
	unload := FALSE;
END_IF

IF GVLvars.seta AND emergencia THEN
	IF GVLvars.botonReset THEN
		enclaveStart := TRUE;
		luzVerde := TRUE;
		luzAmarilla := FALSE;
		luzRoja := FALSE;
		emergencia := FALSE;
		cintaEntradaMaterial := TRUE;
		cintaInclinadaMaterial := TRUE;
		cintaEntradaPalets := TRUE;
		cintaPaletEntradaEstacion := TRUE;
		cintaSalida := TRUE;
		turnPaletizador := TRUE;
//		turnMesaGiratoria := TRUE ;
//		load := TRUE ;
//		unload := TRUE;
	END_IF
END_IF

	// Si se detecta objeto en la salida de la cinta se activa la inclinada
//	IF  GVLvars.sDifusoCintaMaterial THEN
//		 cintaInclinadaMaterial := TRUE;
//	END_IF


// --------------------------- Material. Parte Superior ---------------------------
IF enclaveStart AND NOT emergencia THEN
	
	flancoEntradaMaterial(CLK:=GVLvars.sEntradaPaletizadorMaterial);
	
	IF  flancoEntradaMaterial.Q THEN
			beltPositive := TRUE;
			contadorVector := contadorVector + 1;
	END_IF

	// Si se dispone de una columna (2 elementos) se empuja hacia el plato
	IF contadorVector >= 2 AND paletListo THEN
		startTimerVector := TRUE;
		
	END_IF
	timerVector(IN := startTimerVector, PT:=T#2S);
		
	IF timerVector.Q THEN
		esperaPusher := TRUE;
		startTimerVector := FALSE;
		cintaEntradaMaterial := FALSE;
		cintaInclinadaMaterial := FALSE;
	END_IF
	
	flancoPusher(CLK:=GVLvars.pusherLimit);
	
	IF esperaPusher THEN
		beltPositive := FALSE;
		pusher := TRUE;
//		cintaEntradaMaterial := FALSE;
//		cintaInclinadaMaterial := FALSE;
		
		//Si el cilindro se extendio de todo (empujo completamente al plato)
		IF flancoPusher.Q THEN
			//startTimerVector:=FALSE;
			pusher := FALSE;
			clamp := TRUE;
			//beltPositive := TRUE;
			contadorVector := 0;
			esperaPusher := FALSE;
			MatrizElemLista := TRUE;
		END_IF
	END_IF
	
	
	



// --------------------------- Palets. Parte Inferior ---------------------------
	flancoEntradaPalets(CLK:=GVLvars.sEntradaMesaRotation);
	IF GVLvars.backLimit  THEN
		load := TRUE;
		mesaCargada := TRUE;
		
		//turnMesaGiratoria := TRUE;
	END_IF
	
	IF mesaCargada THEN
		load:=TRUE;
	END_IF
	
	IF girandoMesa THEN 
		turnMesaGiratoria := TRUE;
	END_IF
//	IF GVLvars.backLimit AND GVLvars.frontLimit THEN
//		load := FA;
		
//	END_IF
	
	// Si llega a la parte frontal de la mesa y todavia no acabo de rotar se paara
	IF GVLvars.frontLimit AND NOT GVLvars.maximunRotation THEN
		load := FALSE;
		turnMesaGiratoria := TRUE;
		girandoMesa := TRUE;
	// Si esta en la parte frontal de la mesa y esta giro completamente
	ELSIF GVLvars.frontLimit AND GVLvars.maximunRotation THEN
		load := TRUE;
		cintaPaletEntradaEstacion := TRUE;
	// Si no hay nada en la parte frontal, mesa girada del todo y ya paso el palet
	// se podrias comprobar solo con el sensor difuso
	ELSIF NOT GVLvars.frontLimit AND GVLvars.maximunRotation AND GVLvars.sSalidaMesaRotacion THEN
		turnMesaGiratoria := FALSE;
		mesaCargada := FALSE;
		girandoMesa := FALSE;
		//ScintaPaletEntradaEstacion := TRUE;
	END_IF

	flancoEntradaPalets(CLK:=GVLvars.sEntradaPaletEnEstacion);
	
	 IF  flancoEntradaPalets.Q THEN 
		 chainPositive := TRUE;
		 saliendo := FALSE;
	 END_IF
	 
	 IF GVLvars.elevatorFrontLimit AND PaletListo = FALSE and saliendo = false THEN
		 chainPositive := FALSE;
		 elevatorToLimit := TRUE;
		 elevatorUp := TRUE;
		 PaletListo := TRUE;
		 elevatorDown := FALSE;
		 openPlate := FALSE; // mieentras no este arriba el palet no se abre el plato
		 
	 END_IF
	 
	 
	 
	 flancoPlato(CLK:=GVLvars.plateLimit);
	 
	// Si el palet esta listo y los elementos agrupados
	IF MatrizElemLista AND PaletListo THEN
		openPlate := TRUE; // Se abre al plato con los materiales
		//timerOpenPlate(IN:=openPlate, PT:= T#2S); // se espera a que este completamente abierto
		// si las compuertas del plato estan completamente abiertas
		IF flancoPlato.Q THEN
			elevatorToLimit := TRUE; // se desactiva la senal de subida del palet
			elevatorUp := FALSE; 
			//paletListo := FALSE;
			elevatorDown := TRUE; //  se activa la senal de bajada
			paletizadoListo := TRUE;
			openPlate := FALSE;
			cintaEntradaMaterial := TRUE;
			cintaInclinadaMaterial := TRUE;
			MatrizElemLista := FALSE;
			
		END_IF
	END_IF
	 flancoBasePalet(CLK:=GVLvars.sBasePalet);
	//timerBajadaPalet(IN:=paletizadoListo, PT:=T#2S);
	// Si el palet esta cargado con los materiales se dirige hacia el remover
	IF flancoBasePalet.Q THEN
		chainPositive := TRUE;
		cintaSalida := TRUE;
		elevatorToLimit := FALSE; // se desactiva la senal de subida del palet
		elevatorUp := FALSE; 
		elevatorDown := FALSE; //  se activa la senal de bajada
		
	END_IF
	
	IF GVLvars.sPostPaletizado THEN
			chainPositive := FALSE;	
			paletizadoListo := FALSE;
			paletListo := FALSE;
			openPlate := FALSE;
			saliendo := TRUE;
			numProductosCompletos := numProductosCompletos + 1;
			
		END_IF	
END_IF
// --------------------------- Actualizar salidas ---------------------------

// Paletizador (salidas)
// Cuadro (salidas)
GVLvars.luzVerde := luzVerde;
GVLvars.luzRoja := luzRoja;
GVLvars.luzAmarilla := luzAmarilla;

// Cintas (salidas)
GVLvars.cintaEntradaMaterial := cintaEntradaMaterial;
GVLvars.cintaInclinadaMaterial := cintaInclinadaMaterial;
GVLvars.cintaEntradaPalets := cintaEntradaPalets;
GVLvars.cintaSalida := cintaSalida;
GVLvars.cintaPaletEntradaEstacion := cintaPaletEntradaEstacion;

// Mesa Giratoria (salidas)
GVLvars.turnMesaGiratoria := turnMesaGiratoria;
GVLvars.load :=  load;
GVLvars.unload := unload;


// Paletizador (salidas)
GVLvars.pusher := pusher;
GVLvars.turnFlipper := turnFlipper;
GVLvars.moveClamper := moveClamper;
GVLvars.beltPositive := beltPositive;
GVLvars.beltNegative := beltNegative;
GVLvars.chainPositive := chainPositive;
GVLvars.chainNegative := chainNegative;
GVLvars.OpenPlate := openPlate;
GVLvars.elevatorUp := elevatorUp;
GVLvars.elevatorDown := elevatorDown;
GVLvars.elevatorToLimit := elevatorToLimit;
GVLvars.numProductosCompletos := numProductosCompletos;




]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="2420" Count="22" />
      <LineId Id="2740" Count="0" />
      <LineId Id="2742" Count="1" />
      <LineId Id="2443" Count="8" />
      <LineId Id="2752" Count="2" />
      <LineId Id="2452" Count="3" />
      <LineId Id="2751" Count="0" />
      <LineId Id="2757" Count="1" />
      <LineId Id="2755" Count="0" />
      <LineId Id="2776" Count="2" />
      <LineId Id="2780" Count="0" />
      <LineId Id="2779" Count="0" />
      <LineId Id="2775" Count="0" />
      <LineId Id="2783" Count="0" />
      <LineId Id="2785" Count="0" />
      <LineId Id="2781" Count="0" />
      <LineId Id="2456" Count="0" />
      <LineId Id="2759" Count="0" />
      <LineId Id="2749" Count="0" />
      <LineId Id="2760" Count="0" />
      <LineId Id="2763" Count="1" />
      <LineId Id="2762" Count="0" />
      <LineId Id="2765" Count="0" />
      <LineId Id="2788" Count="7" />
      <LineId Id="2787" Count="0" />
      <LineId Id="2761" Count="0" />
      <LineId Id="2750" Count="0" />
      <LineId Id="2457" Count="0" />
      <LineId Id="2767" Count="0" />
      <LineId Id="2769" Count="0" />
      <LineId Id="2771" Count="3" />
      <LineId Id="2797" Count="7" />
      <LineId Id="2796" Count="0" />
      <LineId Id="2770" Count="0" />
      <LineId Id="2768" Count="0" />
      <LineId Id="2459" Count="7" />
      <LineId Id="2747" Count="0" />
      <LineId Id="2467" Count="0" />
      <LineId Id="2645" Count="0" />
      <LineId Id="2748" Count="0" />
      <LineId Id="2646" Count="7" />
      <LineId Id="2915" Count="0" />
      <LineId Id="2654" Count="5" />
      <LineId Id="2916" Count="1" />
      <LineId Id="2660" Count="21" />
      <LineId Id="2531" Count="8" />
      <LineId Id="2805" Count="1" />
      <LineId Id="2540" Count="1" />
      <LineId Id="2808" Count="3" />
      <LineId Id="2816" Count="3" />
      <LineId Id="2542" Count="8" />
      <LineId Id="2813" Count="0" />
      <LineId Id="2551" Count="7" />
      <LineId Id="2812" Count="0" />
      <LineId Id="2820" Count="0" />
      <LineId Id="2559" Count="6" />
      <LineId Id="2913" Count="0" />
      <LineId Id="2566" Count="6" />
      <LineId Id="2905" Count="0" />
      <LineId Id="2903" Count="0" />
      <LineId Id="2892" Count="0" />
      <LineId Id="2574" Count="13" />
      <LineId Id="2896" Count="0" />
      <LineId Id="2588" Count="4" />
      <LineId Id="2914" Count="0" />
      <LineId Id="2894" Count="0" />
      <LineId Id="2593" Count="7" />
      <LineId Id="2908" Count="1" />
      <LineId Id="2907" Count="0" />
      <LineId Id="2906" Count="0" />
      <LineId Id="2606" Count="0" />
      <LineId Id="2897" Count="0" />
      <LineId Id="2899" Count="3" />
      <LineId Id="2904" Count="0" />
      <LineId Id="2911" Count="0" />
      <LineId Id="2987" Count="0" />
      <LineId Id="2990" Count="0" />
      <LineId Id="2898" Count="0" />
      <LineId Id="2607" Count="33" />
      <LineId Id="2989" Count="0" />
      <LineId Id="2641" Count="3" />
      <LineId Id="32" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>