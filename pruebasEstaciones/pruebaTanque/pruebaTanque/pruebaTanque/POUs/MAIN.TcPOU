<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="MAIN" Id="{4c6ab2c4-5e73-43da-80f3-e38131f4b388}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR  
	Sensor_Anterior : BOOL := FALSE;
Flanco_Subida : BOOL := FALSE;
Estado: INT := 0; // 0: Espera | 1: Descargando | 2: Post-descarga
    
   
    // Variables internas
    Sistema_Activo : BOOL;

    Timer_Stop           : TON;
    Esperando_Timer      : BOOL := FALSE;

    Nivel_Bajo           : BOOL;
    Nivel_Alto           : BOOL;
    Nivel_OK             : BOOL;
	// Temporizador para la descarga
    Timer_Descarga       : TON;
    Descargando          : BOOL := FALSE;
	Timer_Llenado: TON;
	InicioLLenado: BOOL := TRUE;
	VienesDeDescarga: BOOL;
	primeraVez: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Enclavamiento del boton de start
IF GVL_Inputs.Start_Button THEN
    Sistema_Activo := TRUE;
	primeraVez := TRUE;
END_IF

// Control inicial llenado tanque
Timer_Llenado(IN := InicioLLenado, PT := T#30s);
IF NOT Timer_Llenado.Q and InicioLLenado THEN
    GVL_Inputs.Fill_Valve := TRUE;           // Abrir valvula llenado
ELSE
    GVL_Inputs.Fill_Valve := FALSE;          // Cerrar valvula llenado
    // Solo dejar de iniciar llenado después de completar timer
    InicioLLenado := FALSE;
END_IF
// FLANCO DE BAJADA del sensor antes del tanque
//Sensor_FlancoBajada := Sensor_Anterior AND NOT GVL_Inputs.Sensor_Tanque_Salida;
//Sensor_Anterior := GVL_Inputs.Sensor_Tanque_Salida;

//// Limites nivel tanque
//Nivel_Bajo := GVL_Inputs.Level_Meter < 2.5;
//Nivel_Alto := GVL_Inputs.Level_Meter > 9.0;
//Nivel_OK   := GVL_Inputs.Level_Meter > 2.5;

//// Control de llenado del tanque
//IF Nivel_Bajo THEN
//    GVL_Inputs.Fill_Valve := 10;  // Abrir completamente valvula entrada
//ELSIF Nivel_Alto THEN
//    GVL_Inputs.Fill_Valve := 0;   // Cerrar valvula
//END_IF

// Si el sistema esta activo
IF Sistema_Activo  AND InicioLLenado=FALSE THEN
	//La oprimera vez que se inica el programa se arrancan las cintas
	IF primeraVez THEN
		GVL_Inputs.Cinta_Entrada := TRUE;
		GVL_Inputs.Cinta_Tanque  := TRUE;
		GVL_Inputs.Cinta_Salida  := TRUE;
		primeraVez := FALSE;
	END_IF
	Flanco_Subida := (NOT Sensor_Anterior) AND GVL_Inputs.Sensor_Tanque_Salida;
Sensor_Anterior := GVL_Inputs.Sensor_Tanque_Salida;


    // Máquina de estados
    CASE Estado OF

        // 🟢 Estado 0: Esperando objeto en la boca del tanque
        0:
            GVL_Inputs.Cinta_Entrada := TRUE;
            GVL_Inputs.Cinta_Tanque  := TRUE;
            GVL_Inputs.Cinta_Salida  := TRUE;
            GVL_Inputs.Discharge_Valve := FALSE;
            Timer_Descarga(IN := FALSE);

            IF Flanco_Subida THEN
                Estado := 1;
            END_IF

        // 🟡 Estado 1: Descargando (2 segundos)
        1:
            GVL_Inputs.Cinta_Entrada := FALSE;
            GVL_Inputs.Cinta_Tanque  := FALSE;
            GVL_Inputs.Cinta_Salida  := FALSE;
            GVL_Inputs.Discharge_Valve := TRUE;

            Timer_Descarga(IN := TRUE, PT := T#2s);

            IF Timer_Descarga.Q THEN
                Timer_Descarga(IN := FALSE); // Detener timer
                Estado := 2;
            END_IF

        // 🔵 Estado 2: Post-descarga - reactivar cintas
        2:
            GVL_Inputs.Discharge_Valve := FALSE;
            GVL_Inputs.Cinta_Entrada := TRUE;
            GVL_Inputs.Cinta_Tanque  := TRUE;
            GVL_Inputs.Cinta_Salida  := TRUE;

            Estado := 0; // Volver a esperar nuevo objeto
    END_CASE

    // Flanco de bajada inicia la descarga
    //IF Sensor_FlancoBajada AND Nivel_OK THEN
//	//IF GVL_Inputs.Sensor_Tanque_Salida THEN
//	IF Flanco_Subida THEN

//		Descargando := TRUE;
//		//Timer_Descarga(IN := Descargando, PT := T#2s);
//        // Detener cintas inmediatamente
//        GVL_Inputs.Cinta_Entrada := FALSE;
//        GVL_Inputs.Cinta_Tanque  := FALSE;
//        GVL_Inputs.Cinta_Salida  := FALSE;
//    END_IF

	
	
//    // Mientras se esta descargando
//    IF Descargando THEN
//		//Se inicia temporizador
//		Timer_Descarga(IN := Descargando, PT := T#2S);
//        GVL_Inputs.Discharge_Valve := TRUE;  // Abrir valvula del tanque
		
//		// Termina descarga
//        IF Timer_Descarga.Q THEN
//        	// cerrar valvula    
//            GVL_Inputs.Discharge_Valve := FALSE;
//            Descargando := FALSE;
//			VienesDeDescarga := TRUE;

////            // Reactivar cintas
////            GVL_Inputs.Cinta_Entrada := TRUE;
////            GVL_Inputs.Cinta_Tanque  := TRUE;
////            GVL_Inputs.Cinta_Salida  := TRUE;
//        END_IF
//    END_IF

////    // Si no estamos descargando ni se detecta un objeto en la entrada del tanque
//    //IF Descargando = FALSE AND VienesDeDescarga = TRUE THEN
//	IF VienesDeDescarga = TRUE THEN
//        GVL_Inputs.Cinta_Entrada := TRUE;
//        GVL_Inputs.Cinta_Tanque  := TRUE;
//        GVL_Inputs.Cinta_Salida  := TRUE;
//        GVL_Inputs.Discharge_Valve := FALSE	;
//	    VienesDeDescarga := FALSE;
//    END_IF

ELSE
    // Sistema desactivado
    GVL_Inputs.Cinta_Entrada := FALSE;
    GVL_Inputs.Cinta_Tanque  := FALSE;
    GVL_Inputs.Cinta_Salida  := FALSE;
//    GVL_Inputs.Fill_Valve := 0.0;
//    GVL_Inputs.Discharge_Valve := 0.0;
    Timer_Descarga(IN := FALSE);
    Descargando := FALSE;
END_IF
]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="1314" Count="41" />
      <LineId Id="1413" Count="38" />
      <LineId Id="1412" Count="0" />
      <LineId Id="1356" Count="55" />
      <LineId Id="104" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>