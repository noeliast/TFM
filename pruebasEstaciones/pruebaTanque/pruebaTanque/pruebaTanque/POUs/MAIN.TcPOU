<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="MAIN" Id="{4c6ab2c4-5e73-43da-80f3-e38131f4b388}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR  
	Sensor_Anterior : BOOL := FALSE;
	Flanco_Subida : BOOL := FALSE;
	Estado: INT := 0; // 0: Espera | 1: Descargando | 2: Post-descarga
	
	
	// Variables internas
	Sistema_Activo : BOOL;
	
	Timer_Stop           : TON;
	Esperando_Timer      : BOOL := FALSE;
	
	Nivel_Bajo           : BOOL;
	Nivel_Alto           : BOOL;
	Nivel_OK             : BOOL;
	// Temporizador para la descarga
	Timer_Descarga       : TON;
	Descargando          : BOOL := FALSE;
	Timer_Llenado: TON;
	InicioLLenado: BOOL := TRUE;
	VienesDeDescarga: BOOL;
	primeraVez: BOOL;
	numDescargas: INT;
	luzVerde: BOOL;
	luzAmarilla: BOOL;
	luzRoja: BOOL;
	tiempoLLenado: TIME;
	tiempoTranscurrrido: TIME;
	parado: BOOL; // variable que india que la secucnia paso por el etado de parado (se pulso stop)
	tiempoRestante: DINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Enclavamiento del boton de start
IF GVL_Inputs.Start_Button THEN
    Sistema_Activo := TRUE;
	primeraVez := TRUE;
	luzVerde := TRUE;
	luzAmarilla := FALSE;
	luzRoja := FALSE;
	parado := FALSE;
END_IF

// Boton Stop -> se para 
IF NOT GVL_Inputs.StopButton THEN
	 Sistema_Activo := FALSE;
	parado := TRUE;
	luzVerde := FALSE;
	luzAmarilla := TRUE;
	luzRoja := FALSE;
	tiempoTranscurrrido := Timer_Llenado.ET;
	InicioLLenado := FALSE;
END_IF
 
// se pretende que el tanuqe este siempre ente un 20-80%
// si el tanuqe esta vacio se necesitan  39s para el 80% 
// si el tanque esta al 20% se necesitan 31s para el 80%
// si el se paro en algun punto se calcula el tiempo rstante
IF primeraVez THEN
	tiempoLLenado := T#39S;
//ELSIF parado THEN
//	tiempoRestante := TIME_TO_DINT(tiempoLLenado) - TIME_TO_DINT(tiempoTranscurrrido);
//	tiempoLLenado := DINT_TO_TIME(tiempoRestante);
ELSE 
	tiempoLLenado := T#31S;
END_IF

IF Sistema_Activo THEN
	// Control inicial llenado tanque
	Timer_Llenado(IN := InicioLLenado, PT := tiempoLLenado);
	IF NOT Timer_Llenado.Q AND InicioLLenado THEN
		GVL_Inputs.Fill_Valve := TRUE;           // Abrir valvula llenado
	ELSE
		GVL_Inputs.Fill_Valve := FALSE;          // Cerrar valvula llenado
		// Solo dejar de iniciar llenado después de completar timer
		InicioLLenado := FALSE;
	END_IF
END_IF




// FLANCO DE BAJADA del sensor antes del tanque
//Sensor_FlancoBajada := Sensor_Anterior AND NOT GVL_Inputs.Sensor_Tanque_Salida;
//Sensor_Anterior := GVL_Inputs.Sensor_Tanque_Salida;

//// Limites nivel tanque
//Nivel_Bajo := GVL_Inputs.Level_Meter < 2.5;
//Nivel_Alto := GVL_Inputs.Level_Meter > 9.0;
//Nivel_OK   := GVL_Inputs.Level_Meter > 2.5;

//// Control de llenado del tanque
//IF Nivel_Bajo THEN
//    GVL_Inputs.Fill_Valve := 10;  // Abrir completamente valvula entrada
//ELSIF Nivel_Alto THEN
//    GVL_Inputs.Fill_Valve := 0;   // Cerrar valvula
//END_IF

// Si el sistema esta activo
IF Sistema_Activo  AND InicioLLenado=FALSE THEN
	//La oprimera vez que se inica el programa se arrancan las cintas
	IF primeraVez THEN
		GVL_Inputs.Cinta_Entrada := TRUE;
		GVL_Inputs.Cinta_Tanque  := TRUE;
		GVL_Inputs.Cinta_Salida  := TRUE;
		primeraVez := FALSE;
	END_IF


Flanco_Subida := (NOT Sensor_Anterior) AND GVL_Inputs.Sensor_Tanque_Salida;
Sensor_Anterior := GVL_Inputs.Sensor_Tanque_Salida;


    // Máquina de estados
    CASE Estado OF

        // Estado 0: Esperando objeto en la boca del tanque
        0:
            GVL_Inputs.Cinta_Entrada := TRUE;
            GVL_Inputs.Cinta_Tanque  := TRUE;
            GVL_Inputs.Cinta_Salida  := TRUE;
            GVL_Inputs.Discharge_Valve := FALSE;
            Timer_Descarga(IN := FALSE);

            IF Flanco_Subida THEN
                Estado := 1;
            END_IF

        //  Estado 1: Descargando (2 segundos)
        1:
            GVL_Inputs.Cinta_Entrada := FALSE;
            GVL_Inputs.Cinta_Tanque  := FALSE;
            GVL_Inputs.Cinta_Salida  := FALSE;
            GVL_Inputs.Discharge_Valve := TRUE;
			
			

            Timer_Descarga(IN := TRUE, PT := T#2s);

            IF Timer_Descarga.Q THEN
                Timer_Descarga(IN := FALSE); // Detener timer
				numDescargas := numDescargas + 1;
                Estado := 2;
            END_IF

        // Estado 2: Post-descarga - reactivar cintas
        2:
			IF numDescargas < 16 THEN
				GVL_Inputs.Discharge_Valve := FALSE;
				GVL_Inputs.Cinta_Entrada := TRUE;
				GVL_Inputs.Cinta_Tanque  := TRUE;
				GVL_Inputs.Cinta_Salida  := TRUE;

            Estado := 0; // Volver a esperar nuevo objeto
			ELSE
				GVL_Inputs.Discharge_Valve := FALSE;
				GVL_Inputs.Cinta_Entrada := FALSE;
				GVL_Inputs.Cinta_Tanque  := FALSE;
				GVL_Inputs.Cinta_Salida  := FALSE;
				InicioLLenado := TRUE;
				numDescargas := 0;
				Estado := 0; // Volver a esperar nuevo objeto
			END_IF
			
		
            
    END_CASE

    // Flanco de bajada inicia la descarga
    //IF Sensor_FlancoBajada AND Nivel_OK THEN
//	//IF GVL_Inputs.Sensor_Tanque_Salida THEN
//	IF Flanco_Subida THEN

//		Descargando := TRUE;
//		//Timer_Descarga(IN := Descargando, PT := T#2s);
//        // Detener cintas inmediatamente
//        GVL_Inputs.Cinta_Entrada := FALSE;
//        GVL_Inputs.Cinta_Tanque  := FALSE;
//        GVL_Inputs.Cinta_Salida  := FALSE;
//    END_IF

	
	
//    // Mientras se esta descargando
//    IF Descargando THEN
//		//Se inicia temporizador
//		Timer_Descarga(IN := Descargando, PT := T#2S);
//        GVL_Inputs.Discharge_Valve := TRUE;  // Abrir valvula del tanque
		
//		// Termina descarga
//        IF Timer_Descarga.Q THEN
//        	// cerrar valvula    
//            GVL_Inputs.Discharge_Valve := FALSE;
//            Descargando := FALSE;
//			VienesDeDescarga := TRUE;

////            // Reactivar cintas
////            GVL_Inputs.Cinta_Entrada := TRUE;
////            GVL_Inputs.Cinta_Tanque  := TRUE;
////            GVL_Inputs.Cinta_Salida  := TRUE;
//        END_IF
//    END_IF

////    // Si no estamos descargando ni se detecta un objeto en la entrada del tanque
//    //IF Descargando = FALSE AND VienesDeDescarga = TRUE THEN
//	IF VienesDeDescarga = TRUE THEN
//        GVL_Inputs.Cinta_Entrada := TRUE;
//        GVL_Inputs.Cinta_Tanque  := TRUE;
//        GVL_Inputs.Cinta_Salida  := TRUE;
//        GVL_Inputs.Discharge_Valve := FALSE	;
//	    VienesDeDescarga := FALSE;
//    END_IF

ELSE
    // Sistema desactivado
    GVL_Inputs.Cinta_Entrada := FALSE;
    GVL_Inputs.Cinta_Tanque  := FALSE;
    GVL_Inputs.Cinta_Salida  := FALSE;
//    GVL_Inputs.Fill_Valve := 0.0;
//    GVL_Inputs.Discharge_Valve := 0.0;
    Timer_Descarga(IN := FALSE);
    Descargando := FALSE;
END_IF



// ------------------------- Actualizar salidas -------------------------

GVL_Inputs.luzAmarilla := luzAmarilla;
GVL_Inputs.luzRoja := luzRoja;
GVL_Inputs.luzVerde := luzVerde;



]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="1314" Count="3" />
      <LineId Id="1542" Count="1" />
      <LineId Id="1545" Count="0" />
      <LineId Id="1591" Count="0" />
      <LineId Id="1318" Count="0" />
      <LineId Id="1562" Count="0" />
      <LineId Id="1538" Count="0" />
      <LineId Id="1537" Count="0" />
      <LineId Id="1539" Count="0" />
      <LineId Id="1541" Count="0" />
      <LineId Id="1549" Count="1" />
      <LineId Id="1548" Count="0" />
      <LineId Id="1587" Count="1" />
      <LineId Id="1540" Count="0" />
      <LineId Id="1563" Count="1" />
      <LineId Id="1569" Count="1" />
      <LineId Id="1597" Count="0" />
      <LineId Id="1565" Count="0" />
      <LineId Id="1567" Count="0" />
      <LineId Id="1571" Count="0" />
      <LineId Id="1594" Count="1" />
      <LineId Id="1593" Count="0" />
      <LineId Id="1573" Count="0" />
      <LineId Id="1568" Count="0" />
      <LineId Id="1566" Count="0" />
      <LineId Id="1319" Count="0" />
      <LineId Id="1576" Count="7" />
      <LineId Id="1574" Count="1" />
      <LineId Id="1585" Count="1" />
      <LineId Id="1584" Count="0" />
      <LineId Id="1328" Count="25" />
      <LineId Id="1510" Count="1" />
      <LineId Id="1508" Count="1" />
      <LineId Id="1413" Count="22" />
      <LineId Id="1476" Count="1" />
      <LineId Id="1436" Count="4" />
      <LineId Id="1505" Count="0" />
      <LineId Id="1441" Count="4" />
      <LineId Id="1479" Count="0" />
      <LineId Id="1482" Count="4" />
      <LineId Id="1480" Count="0" />
      <LineId Id="1500" Count="0" />
      <LineId Id="1503" Count="0" />
      <LineId Id="1501" Count="1" />
      <LineId Id="1489" Count="1" />
      <LineId Id="1506" Count="0" />
      <LineId Id="1504" Count="0" />
      <LineId Id="1481" Count="0" />
      <LineId Id="1487" Count="0" />
      <LineId Id="1496" Count="0" />
      <LineId Id="1451" Count="0" />
      <LineId Id="1412" Count="0" />
      <LineId Id="1356" Count="55" />
      <LineId Id="1551" Count="3" />
      <LineId Id="1559" Count="0" />
      <LineId Id="1558" Count="0" />
      <LineId Id="1560" Count="1" />
      <LineId Id="1555" Count="2" />
      <LineId Id="104" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>