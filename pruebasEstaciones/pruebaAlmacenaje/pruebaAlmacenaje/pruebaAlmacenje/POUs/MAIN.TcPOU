<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="MAIN" Id="{33819508-742b-4c1e-88e6-5bd373dd68ab}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	enclaveStart: BOOL;
	timerColumna: TON;
	posicionEst : ARRAY[1..2] OF REAL;
	distBaldas : distanciaBaldas();
	iniPosOcupEst : inicializarPosOcupEstanteria();
	cargando: BOOL;
	flancoMovingX : F_TRIG;
	flancoMovingZ : F_TRIG;
	movingZ: BOOL;
	movingX: BOOL;
	descragandoElem: BOOL;
	descargandoElem: BOOL;
	elemDescargado: BOOL;
	state: INT := 1;
	posInicialZ : real := 0.2;
	horquillaExtendida: BOOL;
	timerExternsionHorquilla: TON;
	startTimerHorquilla: BOOL;
	timerExtension: BOOL;
	posActual: REAL;
	bajarHorquilla: BOOL;
	timerBajarHorquilla: TON;
	incfementoBaizadaH : REAL := 0.4;
	enPosicoin: BOOL;
	posmovingZ: REAL;
	luzStart :bool;
	luzReset: BOOL;
	luzStop : bool;
	luzVerde: BOOL;
	luzAmarilla: BOOL;
	luzRoja: BOOL;
	emergencia: BOOL;
	cinta:bool;
	setPointX: REAL;
	setPointZ: REAL;
	cintaTransportadoraPalet: BOOL;
	botonReset: BOOL;
	seta : bool;
	botonStart: BOOL;
	botonStop: BOOL;
END_VAR

VAR PERSISTENT
	elemCargado: BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// ----------------------------- Logica Botones ----------------------------------------

//Luces Botons
luzStart := FALSE;
luzStop := FALSE;
luzReset:=FALSE;

(*Boton start 



*)
IF GVLvar.botonStart AND NOT emergencia THEN
	luzStart:= TRUE;
	luzVerde := TRUE;
	luzAmarilla := FALSE;
	luzRoja := FALSE;
	enclaveStart := TRUE;
	cinta := TRUE;
	cintaTransportadoraPalet := TRUE; 
	distBaldas();
	iniPosOcupEst();
	setPointZ := 0.2;
END_IF

IF NOT GVLvar.botonStop AND NOT emergencia THEN
	luzStop := TRUE;
	luzVerde := FALSE;
	luzAmarilla := TRUE;
	luzRoja := FALSE;
	enclaveStart := FALSE;
	cinta := FALSE;
	cintaTransportadoraPalet := FALSE;
END_IF


IF  GVLvar.seta THEN
	luzRoja:= TRUE;
	luzVerde := FALSE;
	luzAmarilla := FALSE;
	
	emergencia := TRUE;
	cinta := FALSE;
	cintaTransportadoraPalet := FALSE	; 
	enclaveStart := FALSE;
END_IF


IF NOT GVLvar.seta AND emergencia THEN
	IF GVLvar.botonReset THEN
		emergencia := FALSE;
		cinta := TRUE;
		cintaTransportadoraPalet := TRUE; 
		enclaveStart := TRUE;
		luzRoja := FALSE;
		luzVerde := TRUE;
		luzAmarilla := FALSE;
	END_IF	
END_IF

// ---------------------------------------------------------------------

IF enclaveStart THEN
	

	CASE state OF
	
		// 1. Esperando Start
		1: 
//			IF GVLvar.botonStart THEN
//				enclaveStart := TRUE;
//				GVLvar.cinta := TRUE;
//				distBaldas();
//				iniPosOcupEst();
//				GVLvar.setPointZ := 0.3;
//				state := 2;  // pasar al siguiente estado
//			END_IF
			setPointZ := posInicialZ;
			state := 2;  // pasar al siguiente estado
			
		// 2. Espera caja en la entrada
		2:
			IF GVLvar.sensorEntradaGrua THEN
				cinta := FALSE;
				cintaTransportadoraPalet := FALSE;
				GVLvar.moveForksRight := TRUE;
				state := 3;
			END_IF
	
		// 3. Horquilla desplegando
		3:
			IF GVLvar.forkRightLimit THEN
				setPointZ := posInicialZ + 0.2;
				startTimerHorquilla := TRUE;
			END_IF
			
			timerExternsionHorquilla (IN:=startTimerHorquilla, PT:= T#2S);
			
			horquillaExtendida :=  (GVLvar.movingZ = (posInicialZ + 0.2)) OR (GVLvar.movingZ > ((posInicialZ + 0.2)-0.05)) OR (GVLvar.movingZ < ((posInicialZ + 0.2)+0.05));
			//IF GVLvar.movingZ = (posInicialZ + 0.2) THEN
			IF timerExternsionHorquilla.Q AND horquillaExtendida THEN
				GVLvar.moveForksRight := FALSE;
				elemCargado := TRUE;
				startTimerHorquilla := FALSE;
				state := 4;
			END_IF
			
//			IF GVLvar.forkMiddleLimit  AND elemCargado THEN 
				
				
//			END_IF
	
		// 4. Calcular posición libre y mover X/Z
		4:
			IF elemCargado AND GVLvar.forkMiddleLimit THEN 
				posicionEst := posicionEstanteria();
				setPointX := posicionEst[1];   // columna (X)
				posicionEst[2]:=posicionEst[2] + incfementoBaizadaH;
				setPointZ := posicionEst[2];   // fila (Z)
				elemCargado := FALSE;
				descargandoElem := TRUE;
				state := 5;
			END_IF
	
		// 5. Esperar llegar a destino
		5:
			 movingX := (GVLvar.movingX = posicionEst[1]) OR (GVLvar.movingX > (posicionEst[1]-0.05) AND GVLvar.movingX < posicionEst[1]) OR (GVLvar.movingX < (posicionEst[1]+0.05)AND GVLvar.movingX > posicionEst[1]) ;
			 movingZ := (GVLvar.movingZ = posicionEst[2]) OR (GVLvar.movingZ > (posicionEst[2]-0.05) AND GVLvar.movingZ < posicionEst[2]) OR (GVLvar.movingZ < (posicionEst[2]+0.05) AND GVLvar.movingZ > posicionEst[2]);
			 
			 
			IF movingZ AND movingX AND descargandoElem THEN
				setPointZ := GVLvar.movingZ -incfementoBaizadaH ;
				bajarHorquilla := TRUE;
				state := 6;
			END_IF
			
			
		6:	
			timerBajarHorquilla (IN:= bajarHorquilla, PT:=T#2S);
			posmovingZ := GVLvar.movingZ;	
			enPosicoin  := (posmovingZ = posicionEst[2]-incfementoBaizadaH) OR (posmovingZ > (posicionEst[2]-incfementoBaizadaH -0.05) AND posmovingZ < posicionEst[2]-incfementoBaizadaH) OR (posmovingZ < (posicionEst[2]-incfementoBaizadaH+0.05) AND posmovingZ > posicionEst[2]-incfementoBaizadaH);
			 
			IF timerBajarHorquilla.Q AND enPosicoin THEN 
				GVLvar.moveForksLeft := TRUE;
				descargandoElem := FALSE;
				bajarHorquilla := FALSE;
				state := 6;
			END_IF
		// 6. Horquilla descargando
		7:
			IF GVLvar.forkLeftLimit THEN
            GVLvar.moveForksLeft := FALSE;
            elemDescargado := TRUE;
            state := 8;
        END_IF
			
		
			
		// 7. Volver a origen
		8:
			IF elemDescargado AND GVLvar.forkMiddleLimit THEN
				setPointX := 0.0;
				setPointZ :=posInicialZ;
				elemDescargado := FALSE;
				cinta := TRUE;
				cintaTransportadoraPalet := TRUE; 
				state := 2;
			END_IF
	
	//    // 8. Reanudar cinta y volver a esperar
	//    8:
	//        IF (GVLvar.movingX = 0.0) AND (GVLvar.movingZ = 0.3) THEN
	//            GVLvar.cinta := TRUE;
	//            state := 2;   // vuelve a esperar siguiente caja
	//        END_IF
	
		// Estado por defecto (seguridad)
		ELSE
			state := 1;
	
	END_CASE
END_IF


// ----------------------------- Actualizar Salidas  ----------------------------------------
GVLvar.setPointX := setPointX;
GVLvar.setPointZ := setPointZ;

GVLvar.luzAmarillo := luzAmarilla;
GVLvar.luzVerde := luzVerde;
GVLvar.luzRoja := luzRoja;
GVLvar.luzBotonReset := luzReset;
GVLvar.luzBotonStart := luzStart;
GVLvar.luzBotonStop := luzStop;

GVLvar.cinta := cinta;
GVLvar.cintaTransportadoraPalet := cintaTransportadoraPalet;


//GVLvar.seta := seta;
//GVLvar.botonReset := botonReset;
//GVLvar.botonStart := botonStart;
//GVLvar.botonStop := botonStop:


]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="539" Count="1" />
      <LineId Id="482" Count="1" />
      <LineId Id="485" Count="0" />
      <LineId Id="487" Count="0" />
      <LineId Id="541" Count="0" />
      <LineId Id="484" Count="0" />
      <LineId Id="543" Count="2" />
      <LineId Id="542" Count="0" />
      <LineId Id="316" Count="0" />
      <LineId Id="490" Count="2" />
      <LineId Id="494" Count="0" />
      <LineId Id="317" Count="1" />
      <LineId Id="355" Count="0" />
      <LineId Id="319" Count="2" />
      <LineId Id="208" Count="0" />
      <LineId Id="324" Count="1" />
      <LineId Id="497" Count="0" />
      <LineId Id="500" Count="1" />
      <LineId Id="499" Count="0" />
      <LineId Id="328" Count="0" />
      <LineId Id="326" Count="0" />
      <LineId Id="356" Count="0" />
      <LineId Id="329" Count="0" />
      <LineId Id="536" Count="0" />
      <LineId Id="502" Count="1" />
      <LineId Id="513" Count="1" />
      <LineId Id="512" Count="0" />
      <LineId Id="506" Count="0" />
      <LineId Id="520" Count="0" />
      <LineId Id="515" Count="0" />
      <LineId Id="521" Count="1" />
      <LineId Id="507" Count="0" />
      <LineId Id="537" Count="0" />
      <LineId Id="508" Count="0" />
      <LineId Id="504" Count="0" />
      <LineId Id="527" Count="0" />
      <LineId Id="530" Count="2" />
      <LineId Id="528" Count="0" />
      <LineId Id="533" Count="2" />
      <LineId Id="529" Count="0" />
      <LineId Id="510" Count="0" />
      <LineId Id="538" Count="0" />
      <LineId Id="505" Count="0" />
      <LineId Id="330" Count="0" />
      <LineId Id="323" Count="0" />
      <LineId Id="331" Count="1" />
      <LineId Id="209" Count="11" />
      <LineId Id="334" Count="0" />
      <LineId Id="333" Count="0" />
      <LineId Id="221" Count="4" />
      <LineId Id="357" Count="0" />
      <LineId Id="226" Count="6" />
      <LineId Id="360" Count="0" />
      <LineId Id="394" Count="0" />
      <LineId Id="236" Count="0" />
      <LineId Id="438" Count="0" />
      <LineId Id="392" Count="0" />
      <LineId Id="368" Count="0" />
      <LineId Id="439" Count="0" />
      <LineId Id="363" Count="0" />
      <LineId Id="390" Count="0" />
      <LineId Id="366" Count="0" />
      <LineId Id="447" Count="0" />
      <LineId Id="449" Count="1" />
      <LineId Id="365" Count="0" />
      <LineId Id="440" Count="1" />
      <LineId Id="445" Count="1" />
      <LineId Id="443" Count="0" />
      <LineId Id="237" Count="5" />
      <LineId Id="417" Count="0" />
      <LineId Id="243" Count="7" />
      <LineId Id="290" Count="0" />
      <LineId Id="399" Count="0" />
      <LineId Id="398" Count="0" />
      <LineId Id="457" Count="0" />
      <LineId Id="251" Count="0" />
      <LineId Id="458" Count="0" />
      <LineId Id="464" Count="0" />
      <LineId Id="479" Count="0" />
      <LineId Id="255" Count="0" />
      <LineId Id="463" Count="0" />
      <LineId Id="474" Count="0" />
      <LineId Id="468" Count="0" />
      <LineId Id="476" Count="2" />
      <LineId Id="475" Count="0" />
      <LineId Id="256" Count="0" />
      <LineId Id="461" Count="1" />
      <LineId Id="466" Count="0" />
      <LineId Id="459" Count="1" />
      <LineId Id="257" Count="1" />
      <LineId Id="451" Count="3" />
      <LineId Id="436" Count="0" />
      <LineId Id="421" Count="0" />
      <LineId Id="406" Count="0" />
      <LineId Id="264" Count="6" />
      <LineId Id="288" Count="0" />
      <LineId Id="358" Count="0" />
      <LineId Id="271" Count="14" />
      <LineId Id="8" Count="0" />
      <LineId Id="547" Count="3" />
      <LineId Id="555" Count="1" />
      <LineId Id="551" Count="1" />
      <LineId Id="557" Count="4" />
      <LineId Id="546" Count="0" />
      <LineId Id="562" Count="0" />
      <LineId Id="566" Count="1" />
      <LineId Id="583" Count="3" />
      <LineId Id="569" Count="1" />
      <LineId Id="565" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>