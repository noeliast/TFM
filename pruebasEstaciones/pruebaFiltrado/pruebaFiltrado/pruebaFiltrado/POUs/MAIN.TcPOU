<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="MAIN" Id="{cbd6c4bf-6373-4be1-b0b1-5f6d9871d58c}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	enclaveStart: BOOL;
	cintaRemoveVision: BOOL;
	cintaBascula: BOOL;
	cintaPostBascula: BOOL;
	cintaRemoveBascula: BOOL;
	cintaVision: BOOL;
	timerVision: TON;
	cintaBasculaPositivo:bool;
	
	descarteXcolor: BOOL;
	cilindroVision: BOOL;
	cintaDescarteVision: BOOL;
	timerBascula: TON;
	descarteXpeso: BOOL;
	cilindroBascula: BOOL;
	cintaDescarteBascula: BOOL;
	startTimerVision: BOOL;
	cintaBasculaNegativo: BOOL;
	difusoVisionAnt: bool;
	descartando: BOOL;
	flancAnteriorCilindroVision : F_TRIG;
	flancoCintaDescarte : R_TRIG;
	descratandoXpeso: BOOL;
	startTimerBascula: BOOL;
	flancoCintaDescarteBascula: F_TRIG;
	flancAnteriorCilindroBascula: F_TRIG;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*

1 - Si se pulsa strart -> enclave y arranque de cintas

2 - Si se detecta en el sensor fotoelectrico de vision
	* Se para esa cinta 2 segundos
	* Se cogen las caracteristicas del objeto
		- Base azul : 3
		- Base verde : 6
		- Base metal : 9
	* En caso de descarte 
		- Se para cinta con el sensor delanterio del cilindro
		- Se acciona el cilindro
		- Se activa la cinta de descarte con el sensor fotoelectrico 
		  ( el tiempo de activo se sabe por vel y distancia x.ej)
 
3 - Si se detecta objeto en la cinta de pesaje (sensor fotoelectrico)
	* Se para la cinta 2 segundos
	* Se cogen als caracteristicas del objeto
		- Bases verde / azul : 7 kg
		- Base metalica : 9 kg
	* En caso de descarte
		--- Repetir proceso anterior

4 - Actualizar salidas

*)

// ------------------- PASO 1 -------------------

IF GVLvars.botonStart THEN
	enclaveStart := TRUE;
	cintaVision := TRUE;
	cintaRemoveVision := TRUE;
	cintaBascula := TRUE;
	cintaPostBascula := TRUE;
	cintaRemoveBascula 	:= TRUE;
END_IF


IF enclaveStart THEN
	
// ------------------- PASO 2 - Filtro Vision -------------------

	// Detectar flanco ascendente solo una vez por detección
	IF GVLvars.sDifusoVision AND NOT difusoVisionAnt THEN
		startTimerVision := TRUE;  // Arranca el temporizador solo una vez por evento
		cintaVision := FALSE; // Se para la cinta
	END_IF
	difusoVisionAnt := GVLvars.sDifusoVision;
		
	//IF GVLvars.sDifusoVision THEN
	//cintaVision := FALSE; // Se para la cinta
	//startTimerVision := TRUE;
	timerVision(IN:=startTimerVision, PT:=T#2S);
	IF timerVision.Q THEN
		startTimerVision:=FALSE;
		// Si es color azul o metalica continua 
		IF GVLvars.sVision = 3 OR GVLvars.sVision = 9 THEN
			descarteXcolor := FALSE;
		// Se descarta la base
		ELSE
			descarteXcolor := TRUE;
		END_IF
		cintaVision := TRUE; // Reanuda la marcha
		
	END_IF
	
	// Si hay que descratar y se detecta objeto delante del cilindro
	IF descarteXcolor AND GVLvars.sCilindroVision THEN
		descartando := TRUE;
		
	END_IF
	
	flancAnteriorCilindroVision(CLK := GVLvars.sCilindroVision);
	flancoCintaDescarte(CLK := GVLvars.sDifusoRemoveVision);
	
	// Si tenemos que descartar y el objeto para el sensor (se situa el objeto en frente del cilindro)
	IF descartando = TRUE  AND flancAnteriorCilindroVision.Q THEN
		cintaVision := FALSE;
		cilindroVision := TRUE;
		cintaDescarteVision := TRUE;
	END_IF
	
	// si e objeto ya esta en la cinta de descarte se reanuda con la de vision
	IF GVLvars.sCilindroVisionDelantero THEN
		cintaVision := TRUE;
		cilindroVision := FALSE;	
		descartando := FALSE;
		
	END_IF

	
	
// ------------------ PASO 3 - Filtro peso -------------------

	cintaBascula := TRUE;
	
	IF GVLvars.sDifusoBascula THEN
		startTimerBascula := TRUE;  // Igual que el timer de vision: arranca el temporizador solo una vez
		cintaBascula := FALSE; // Se para la cinta
	END_IF
	
	timerBascula(IN:=startTimerBascula, PT:=T#2S);
	
	IF timerBascula.Q THEN
		startTimerBascula := FALSE;
	
		// Si el peso es mayor de un umbral se descarta
		IF GVLvars.pesoBascula > 4 THEN
			descarteXpeso := TRUE;
		ELSE
			descarteXpeso := FALSE;
		END_IF
	
		cintaBascula := TRUE; // Reanuda la marcha
	END_IF
		
	// Si hay que descartar y se detecta objeto delante del cilindro
	IF descarteXpeso AND GVLvars.sCilindroBascula THEN
		descratandoXpeso := TRUE;
	END_IF
	
	//flancAnteriorCilindroBascula(CLK := GVLvars.sCilindroBascula);
	flancoCintaDescarteBascula(CLK := GVLvars.sDifusoRemovePeso);
	
	// Si tenemos que descartar y el objeto para el sensor
	IF descratandoXpeso = TRUE AND GVLvars.sCilindroBascula THEN
		cintaBascula := FALSE;
		cilindroBascula := TRUE;
		cintaDescarteBascula := TRUE;
	END_IF	
	
	// si el objeto ya está en la cinta de descarte, se reanuda la cinta bascula
	IF GVLvars.sCilindroBasculaDelantero THEN
		cintaBascula := TRUE;
		cilindroBascula := FALSE;
		descratandoXpeso := FALSE;
		descarteXpeso := FALSE;
	END_IF



END_IF


// ----------------- PASO 4 ------------------

// Cintas
GVLvars.cintaBascula := cintaBascula;
GVLvars.cintaPostBascula := cintaPostBascula;
GVLvars.cintaRemoveBascula := cintaRemoveBascula;
GVLvars.cintaRemoveVision := cintaRemoveVision;
GVLvars.cintaVision := cintaVision;

// Cilindros
GVLvars.cilindroBascula := cilindroBascula;
GVLvars.cilindroVision := cilindroVision;
]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="335" Count="75" />
      <LineId Id="472" Count="0" />
      <LineId Id="411" Count="4" />
      <LineId Id="570" Count="1" />
      <LineId Id="416" Count="4" />
      <LineId Id="471" Count="0" />
      <LineId Id="421" Count="1" />
      <LineId Id="425" Count="2" />
      <LineId Id="492" Count="6" />
      <LineId Id="501" Count="13" />
      <LineId Id="567" Count="0" />
      <LineId Id="515" Count="14" />
      <LineId Id="568" Count="0" />
      <LineId Id="530" Count="4" />
      <LineId Id="569" Count="0" />
      <LineId Id="535" Count="1" />
      <LineId Id="456" Count="0" />
      <LineId Id="572" Count="1" />
      <LineId Id="457" Count="13" />
      <LineId Id="6" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>