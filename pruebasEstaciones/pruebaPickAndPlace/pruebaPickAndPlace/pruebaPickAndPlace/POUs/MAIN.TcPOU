<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="MAIN" Id="{d409ff99-3b5d-4bd9-9b04-f975b0e40891}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	sistemaActivo : BOOL;
	
	cintaBase : BOOL;
	cintaTapa : BOOL;
	
	
	baseOK: BOOL;
	tapaOK: BOOL;
	flancoBajada_MovingXY: BOOL;
	movingXY_Anterior: BOOL;
	flancoBajada_MovingZ: BOOL;
	movingZ_Anterior: BOOL;
	EstadoPickPlace: INT;
	timerMovimiento: TON;
	tiempoMovimiento: TIME;
	
	flancoTapa : F_TRIG;
	flancoBase : F_TRIG;
	luzVerde: BOOL;
	luzNaranja: BOOL;
	luzRojo: BOOL;
	luzStop: BOOL;
	luzStart: BOOL;
	luzReset: BOOL;
	emergencia: BOOL;
	ProductoFinal: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[luzStop := FALSE;
luzStart := FALSE;
luzReset := FALSE;

//Si se pulsa el boton de start se arrancan als cintas
IF GVLvars.botonStart AND NOT emergencia THEN
	sistemaActivo := TRUE;
	luzVerde := TRUE;
	luzNaranja := FALSE;
	luzRojo := FALSE;
	luzStop := FALSE;
	luzStart := TRUE;
	
END_IF

IF NOT GVLvars.botonStop AND NOT emergencia THEN
	luzReset := TRUE;
	sistemaActivo := FALSE;
	cintaBase := FALSE;
	cintaTapa := FALSE;
	luzVerde := FALSE;
	luzNaranja := TRUE;
	luzRojo := FALSE;
	
END_IF


IF NOT GVLvars.seta THEN
	sistemaActivo := FALSE;
	cintaBase := FALSE;
	cintaTapa := FALSE;
	luzVerde := FALSE;
	luzNaranja := FALSE;
	luzRojo := TRUE;
	emergencia := TRUE;
END_IF


IF  GVLvars.seta AND emergencia THEN
	IF GVLvars.botonReset THEN
		sistemaActivo := TRUE;
		luzVerde := TRUE;
		luzNaranja := FALSE;
		luzRojo := FALSE;
		luzStop := FALSE;
		luzStart := FALSE;
		luzReset := TRUE;
		emergencia := FALSE;
	END_IF
END_IF

IF sistemaActivo AND emergencia = FALSE THEN
	
	IF baseOK = FALSE AND tapaOK = FALSE THEN
		cintaBase := TRUE;
	cintaTapa := TRUE;
	END_IF
	
	flancoTapa(CLK:=GVLvars.sensorFotoTapa);
	flancoBase(CLK:= GVLvars.sensorFotoBase);
	
	// Base en barrera posicionadora
	IF  flancoBase.Q THEN
		baseOK := TRUE;
		cintaBase := FALSE;
		
		GVLvars.cerrarAbrazaderaBase := TRUE;
	END_IF
	
	// Tapa en barrera posiconadora
	IF flancoTapa.Q THEN
		tapaOK := TRUE;
		cintaTapa := FALSE;
		GVLvars.cerrarAbrazaderaTapa := TRUE;
	END_IF
	
//	// --- Detección de flancos ---
//	flancoBajada_MovingXY := (NOT GVL_Var.PickPlace_MovingXY) AND movingXY_Anterior;
//	flancoBajada_MovingZ := (NOT GVL_Var.PickPlace_MovingZ) AND movingZ_Anterior;
	
//	movingXY_Anterior := GVL_Var.PickPlace_MovingXY;
//	movingZ_Anterior := GVL_Var.PickPlace_MovingZ;
	
	// --- Maquina de estados Pick & Place ---
	CASE EstadoPickPlace OF
	
		0: 
			
			// Inicio - piezas posicionadas y abrazaderas cerradas
			IF baseOK AND tapaOK AND GVLvars.limiteSujeccionBase AND GVLvars.limiteSujeccionTapa THEN
				EstadoPickPlace := 1;
			END_IF
	
		1: // Desplagar horizontalmente
			GVLvars.PickPlace_MoverZ := FALSE; // vertical
			GVLvars.PickPlace_MoverX := TRUE; //  horizontal
			GVLvars.PickPlace_Agarrar := FALSE; // ventosa
			ProductoFinal := FALSE;

			// EBERIA SER CON FLANCOS
			// si esta comletamnte extentida horizontalmente -> siguiente estao
			IF NOT GVLvars.PickPlace_MovingXY THEN
				timerMovimiento(IN:=TRUE, PT:=T#2S);
				IF timerMovimiento.Q THEN
//				GVL_Var.PickPlace_MoverZ := FALSE;
				timerMovimiento(IN:=FALSE);
	
				EstadoPickPlace := 2;
			END_IF
				
			END_IF
	
		2: // Bajamos vertical
			GVLvars.PickPlace_MoverZ := TRUE; //desplargar vertical
			GVLvars.PickPlace_MoverX := TRUE; // esplagamos horizontal
			GVLvars.PickPlace_Agarrar := FALSE; // ventosa

			// DEBERIA SER CON FLANCOS
			// si esta comletamnte extentida horizontalmente -> siguiente estao
			IF NOT GVLvars.PickPlace_MovingZ THEN
				EstadoPickPlace := 3;
			END_IF
	
		3: // AGARRAR objeto
			GVLvars.PickPlace_MoverZ := TRUE;  
			GVLvars.PickPlace_MoverX := TRUE;
			GVLvars.PickPlace_Agarrar := TRUE;
	
			
			timerMovimiento(IN:=TRUE, PT:=T#2S);
			IF timerMovimiento.Q THEN
//				GVL_Var.PickPlace_MoverZ := FALSE;
				timerMovimiento(IN:=FALSE);
	
				EstadoPickPlace := 4;
			END_IF
	
		4: // recogemos verticalmente ocn objeto agarrado
			GVLvars.PickPlace_MoverZ := FALSE;  
			GVLvars.PickPlace_MoverX := TRUE;
			GVLvars.PickPlace_Agarrar := TRUE;
	

			// DEBERIA SER CON FLANCOS
			// si esta comletamnte extentida horizontalmente -> siguiente estao
			IF NOT GVLvars.PickPlace_MovingZ THEN
				
			timerMovimiento(IN:=TRUE, PT:=T#2S);
			IF timerMovimiento.Q THEN
//				GVL_Var.PickPlace_MoverZ := FALSE;
				timerMovimiento(IN:=FALSE);
	
				EstadoPickPlace := 5;
			END_IF
				
			END_IF
	
		5: // recogemos horizontal con pieza aujeta
			GVLvars.PickPlace_MoverZ := FALSE;  
			GVLvars.PickPlace_MoverX := FALSE;
			GVLvars.PickPlace_Agarrar := TRUE;
			
			//GVL_Var.cerrarAbrazaderaBase := FALSE;
	

			IF NOT GVLvars.PickPlace_MovingXY THEN
				
			timerMovimiento(IN:=TRUE, PT:=T#2S);
			IF timerMovimiento.Q THEN
//				GVL_Var.PickPlace_MoverZ := FALSE;
				timerMovimiento(IN:=FALSE);
				EstadoPickPlace := 6;
				
			END_IF
					
			END_IF
	
		6: //bajar verticalmente
			GVLvars.PickPlace_MoverZ := TRUE;  
			GVLvars.PickPlace_MoverX := FALSE;
			GVLvars.PickPlace_Agarrar := TRUE;
	
		
			IF NOT GVLvars.PickPlace_MovingZ THEN
				
			timerMovimiento(IN:=TRUE, PT:=T#2S);
			IF timerMovimiento.Q THEN
//				GVL_Var.PickPlace_MoverZ := FALSE;
				timerMovimiento(IN:=FALSE);
	
				EstadoPickPlace := 7;
			END_IF
			END_IF
							


	
		7: // soltar objeto
			GVLvars.PickPlace_MoverZ := TRUE;  
			GVLvars.PickPlace_MoverX := FALSE;
			GVLvars.PickPlace_Agarrar := FALSE;
	
			// Reiniciar variables y continuar producción
			estadoPickPlace := 8;
			
			
		8:
			GVLvars.PickPlace_MoverZ := FALSE;  
			GVLvars.PickPlace_MoverX := FALSE;
			GVLvars.PickPlace_Agarrar := FALSE;
			
			IF NOT GVLvars.PickPlace_MovingZ THEN		
					EstadoPickPlace := 9;
			END_IF
			
		//Estado para levantar a barreara de posicionameinto
		// e arranque de cintas
		9:
			GVLvars.levantarAbrazaderaTapa := TRUE;
			cintaBase := TRUE;
			cintaTapa := TRUE;
			ProductoFinal := TRUE;
			
			//Si lla paso la barrera posicionadora
			IF GVLvars.sensorPostSellado THEN
				GVLvars.levantarAbrazaderaTapa := FALSE;
				baseOK := FALSE;
				tapaOK := FALSE;
	
				GVLvars.cerrarAbrazaderaBase := FALSE;
				GVLvars.cerrarAbrazaderaTapa := FALSE;
	
				EstadoPickPlace := 0;
			END_IF
	
	ELSE
		EstadoPickPlace := 0; // Si estado inválido, reiniciar
	END_CASE	
END_IF

// Se actualizan las salias
GVLvars.cintaBases := cintaBase;
GVLvars.cintaTapas := cintaTapa;
GVLvars.luzVerticalNaranja := luzNaranja;
GVLvars.luzVerticalRoja := luzRojo;
GVLvars.luzVerticalVerde := luzVerde;
GVLvars.luzStop := luzStop;
GVLvars.luzStart := luzStart;
GVLvars.luzReset := luzReset;
//GVL_Var.cerrarAbrazaderaBase :=
//GVL_Var.cerrarAbrazaderaTapa
//GVL_Var.levantarAbrazaderaBase
//GVL_Var.levantarAbrazaderaTapa
//GVL_Var.PickPlace_Agarrar
//GVL_Var.PickPlace_MoverX
//GVL_Var.PickPlace_MoverZ
]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="962" Count="1" />
      <LineId Id="960" Count="1" />
      <LineId Id="715" Count="2" />
      <LineId Id="720" Count="20" />
      <LineId Id="966" Count="0" />
      <LineId Id="743" Count="4" />
      <LineId Id="964" Count="0" />
      <LineId Id="748" Count="5" />
      <LineId Id="756" Count="4" />
      <LineId Id="959" Count="0" />
      <LineId Id="965" Count="0" />
      <LineId Id="761" Count="3" />
      <LineId Id="1001" Count="2" />
      <LineId Id="1005" Count="0" />
      <LineId Id="1004" Count="0" />
      <LineId Id="1006" Count="0" />
      <LineId Id="765" Count="28" />
      <LineId Id="998" Count="1" />
      <LineId Id="794" Count="131" />
      <LineId Id="995" Count="1" />
      <LineId Id="926" Count="32" />
      <LineId Id="410" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>